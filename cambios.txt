2003-02-21  David A. Capello  <dacap@users.sourceforge.net>

	* htmlex.c (process_file): Arreglada una extraña conducta con las
	macros funcionales.

2003-02-17  David A. Capello  <dacap@users.sourceforge.net>

	* htmlex.c (main): Arreglada la generación de dependencias.

	* htmlex.c (out_deps): Arreglado un pequeño error con "depstream".

	* htmlex.c, tags.c: Agregada la variable "kill_comments" y el
	argumento opcional -k para activar el viejo comportamiento de
	htmlex (gracias a Zaripov Michail por reportar que los comentarios
	son necesarios en algunos casos como los javascripts).

2003-02-16  David A. Capello  <dacap@users.sourceforge.net>

	* htmlex.c: Agregado "can_dep" para hacer menos dependencias.

2003-02-10  David A. Capello  <dacap@users.sourceforge.net>

	* htmlex-filter.pl: Agregado este script para optimizar los
	resultados de htmlex.

	* htmlex.c, macros.c: Las macros funcionales ya trabajan a la
	perfección.

2003-02-09  David A. Capello  <dacap@users.sourceforge.net>

	* macros.c: Reescrito con una mejor API. Y soporte para macros
	funcionales, con lo que ahora ya se pueden crear etiquetas
	personalizadas (como las macros de C/C++).

	* htmlex.c (own_strtok): Arreglado el funcionamiento de comillas
	dentro de otras comillas (<!macro a "mi \"macro\"">).
	(main): Arreglado un pequeño bug de acceso ilegal a los
	argumentos.

2002-12-16  David A. Capello  <dacap@users.sourceforge.net>

	* Arreglado el funcionamiento al utilizar argumentos como:
	  htmlex -a hola -- file.htex chau
	  Ahora se le pasan ambos argumentos:
	  <!arg1> = hola
	  <!arg2> = chau

2002-10-13  David A. Capello  <dacap@users.sourceforge.net>

	* Arreglado el comportamiento general del <!if>: ahora,
	  las etiquetas que se encuentren en un bloque `if' falso,
	  no son procesadas.
	* Arreglada la etiqueta <!elif ...>.
	* Arreglado un error terrible de liberación de memoria
	  en tag_include() de los argumentos que son pasados al
	  archivo que se incluye. Todavía no puedo creer como
	  el programa no falló todas las otras veces.
	* Agregado -V y cambiado -v para dos nuevos modos verbosos.

2002-03-15  David A. Capello  <dacap@users.sourceforge.net>

	* Arreglado el `readme.txt' (a un inglés más entendible): Muchas
	  gracias a Robert J Ohannessian por esto.
	* Parche de Robert J Ohannessian: Renombrado el prefijo de todo
	  lo referido a los `streams', desde `s*' a `st*' (con esto htmlex
	  se puede compilar con Mingw sin problemas). También, hizo
	  algunas modificaciones estéticas a la etiqueta <!file-size>.

2002-01-03  David A. Capello  <dacap@users.sourceforge.net>

	* Escribí el resto del fichero readme.txt.
	* Eliminado un `warning' de gcc-3.0 en usage():
	  "multi-line string literals are deprecated".

2002-01-02  David A. Capello  <dacap@users.sourceforge.net>

	* Arreglado un estupido error en sseek(): se cambiaron los
	  `return 0' por `break's (gracias a Jorge Ramírez Flores).

2001-12-04  David A. Capello  <dacap@users.sourceforge.net>

	* Arreglados algunos errores con la etiqueta <!file-size>:
	  El buffer para el formato era muy pequeño.

2001-12-03  David A. Capello  <dacap@users.sourceforge.net>

	* Nueva etiqueta <!dep archivo>.

2001-11-03  David A. Capello  <dacap@users.sourceforge.net>

	* Agregado sort_macros: Ahora las macros con nombres más largos
	  son las que se encuentran más al inicio de `macros[]'.
	* Ya se saltean los comentarios.

2001-11-01  David A. Capello  <dacap@users.sourceforge.net>

	* Listo, en unos 5 días hice un programa mucho mejor de lo que
	  hice en dos meses, y aunque el código es un completo desorden,
	  me encanta :-)

2001-10-31  David A. Capello  <dacap@users.sourceforge.net>

	* Mejorada la generación de dependencias.
	* Optimizado algunas expresiones.
	* Listo los bloques condicionales: <!if><!elif><!else><!fi>.

2001-10-30  David A. Capello  <dacap@users.sourceforge.net>

	* Etiquetas: <!clean>, <!chop>, <!shift>, <!tolower> y <!toupper>.
	* Listo: <!file-size>, <!exec>, <!exec-proc> y <!find>.
	* Cambiado: <!htmlex-version> a <!version>.
	* Agregado: <!basename>, <!dir>, <!notdir>, <!suffix>.
	* Lista la etiqueta <!include>.

2001-10-29  David A. Capello  <dacap@users.sourceforge.net>

	* Listos los argumentos: <arg*>.
	* Ya se aceptan macros: también se aceptan macros dentro de otras,
	  por lo que los argumentos pueden tener etiquetas y macros.

2001-10-27  David A. Capello  <dacap@users.sourceforge.net>

	* Ya se leen ficheros y se pueden llamar diferentes funciones.
	* El procesador de argumentos está listo.
	* Comenzando desde cero una nueva versión de htmlex en C:
	  ya que quiero velocidad, y que se puedan compilar varios ficheros
	  a la vez (al estilo `gcc').

2001-10-17  David A. Capello  <dacap@users.sourceforge.net>

	* Agregado <!file-size ...>: Para obtener el tamaño de un fichero.

2001-10-05  David A. Capello  <dacap@users.sourceforge.net>

	* Arreglado un error con los <!include> y <!exec>: Se confundían
	  las cosas al querer adjuntar o imprimir una línea, y se producían
	  resultados no esperados.

2001-10-03  David A. Capello  <dacap@users.sourceforge.net>

	* Nueva etiqueta <!clean>: Para borrar los espacios, tabuladores y
	  retornos de líneas del inicio y final del primer argumento que
	  se le especifíque.
	* Algunas mejoras en htmlex-site: ahora hace una pregunta sobre si
	  el usuario quiere o no la conversión automática de los ficheros X11.
	* Arreglado un bug bastante escondido con los <!if> e <!include>:
	  Antes:
		a<!if 0 == 1><!include main.c><!else>z<!fi> -> z
	  Ahora:
		a<!if 0 == 1><!include main.c><!else>z<!fi> -> az
	* Arreglados algunos errores y mejorado un poco el código en algunas
	  partes: Al parecer la función `htmlex_attach' tenía una argumento
	  inútil, por lo visto quedó del pasado cuando a esto lo manejaba
	  de una forma diferente (ya que no existían los <!if>).
	* Agregado <!exists filename>: Para poder ver si un fichero existe
	  o no.
	* Optimizada la velocidad del procesado: Luego de una idea que tuve en
	  la cama, la velocidad la pude aumentar gracias a una tabla (de 256
	  elementos) que indica que caracter está ocupando el inicio de alguna
	  macro. Con esto me puedo saltar miles de comparaciones inútiles con
	  los nombres de las macros. (ver por @htmlex_macro_chars)

2001-09-26  David A. Capello  <dacap@users.sourceforge.net>

	* htmlex-site: Ahora el nombre del autor es extraido del fichero
	  `/etc/passwd'.

2001-09-22  David A. Capello  <dacap@users.sourceforge.net>

	* Nueva etiqueta <!htmlex-version>: Devuelve la versión de htmlex,
	  por si las dudas alguien quiere nombrar con cual versión
	  construyeron tal página.
	* Optimizado: htmlex-site tiene un nuevo script upload.sh para
	  subir el sitio, y se arregló un error en la generación de
	  dependencias.
	* Arreglado: Algunas cosas menores en los manuales y ejemplos.
	* Traducción completa: BUGS, NEWS, TODO y README.

2001-09-19  David A. Capello  <dacap@users.sourceforge.net>

	* Fusionado: Este ChangeLog con el anterior de la versión en
	  en lenguaje C (sólo para demostrar que trabajé más :-)
	* Parcialmente listo el manual de htmlex-site: Además, se hicieron
	  algunas mejoras en el script.

2001-09-18  David A. Capello  <dacap@users.sourceforge.net>

	* Modificado htmlex-site: Mejoradas algunas cosas en este script.
	  Ahora se utiliza otra estructura de directorios, se podría decir
	  que la "tomé prestada" :-) del sitio oficial de Allegro creado
	  por Grzegorz Adam Hankiewicz.

2001-09-17  David A. Capello  <dacap@users.sourceforge.net>

	* Optimizados algunos mensajes de errores: Ahora se trata de
	  mostrar más el número de línea donde se produce el error
	  (como en los <!include> o en cosas donde no se encuentra
	  el final de una etiqueta y/o comentario).

2001-09-16  David A. Capello  <dacap@users.sourceforge.net>

	* Versión liberada: 0.1.1 beta.
	* Arreglado un error con los <!if>: Se tuvo que crear algo llamado
	  if-spaces, que son bloques de condiciones independientes unos
	  con otros, por ejemplo, un bloque de condición en el cuerpo
	  del fichero es totalmente independiente con un bloque de
	  condición en simplemente un argumento de cualquier etiqueta.
	* Listo el nuevo ejemplo: if.htex.
	* Se agregó un par de funciones (htmlex_attach, htmlex_refresh)
	  y variables: Para poder controlar los bloques IF.
	* Ya se soporta: Diferentes niveles de anidamientos en los
	  bloques IF.
	* Listo: <!if>, <!elif>, <!else> y <!fi>.

2001-09-15  David A. Capello  <dacap@users.sourceforge.net>

	* Versión liberada: Primer 0.1.0 pre-alpha.
	* Arreglado un error con el procesado de los <!include> y <!exec>:
	  Ahora se tratan de forma diferente dependiendo de si están (no
	  se puede leer desde el fichero de entrada) o no (se puede leer)
	  dentro de una etiqueta.
	* Arreglado un error con los tabuladores: antes eran interpretados
	  como caracteres imprimibles y no como espacios que separan
	  argumentos.
	* El manual (en español): Está casi terminado (para las etiquetas
	  que existen hoy en día ya está listo).
	* Ya se tranladaron las funciones: <!lc>, <!lcfirst>,
	  <!uc>, <!ucfirst>, <!dir>, <!notdir>, <!basename>, <!suffix>,
	  <!chop> y <!shift> (que antes era <!remove>).
	* Listo: <!exec>, y <!exec-proc> que reemplaza al viejo
	  <EXEC process src="...">
	* Nueva etiqueta <include-path>: sirve para conseguir dos
	  cosas:
	    <include-path> a secas: la lista de rutas seperadas por espacios
	    <include-path file>: la ubicación del fichero `file'.
	* Nueva posibilidad que facilitará al 100% el manejo:
	  Ahora, es lo mismo utilizar:
	    <!include "<!basename blabla.c>">
	  Que:
	    <!include <!basename blabla.c>>
	  En otras palabras, ahora, los corchetes < y > encierran
	  argumentos.
	* Se pueden leer argumentos entre comillas (simples y dobles):
	  <!tag arg1 arg2>
	  <!tag "arg1 more-arg1">
	  <!tag 'arg1 more-arg1'>
	* Ya está: <!macro-reset> y <!macro ...> para crear, modificar
	  y eliminar macros.

2001-09-14  David A. Capello  <dacap@users.sourceforge.net>

	* Ya se soporta: <!args> y <!arg1> ... <!argN>
	* CAMBIO MAYOR!: Se cambió el lenguaje en sí:
	  Ya no más:
	    <INCLUDE src="hola.htex" arg1="hi" arg2="bla bla">
	    <MACRO name="hola mundo" value="hello world">
	    <MACRO name="macroaborrar">
	    <MACRO reset>
	  Ahora es:
	    <!include hola.htex hi "bla bla">
	    <!macro "hola mundo" "hello world">
	    <!macro "macroaborrar">
	    <!macro-reset>
	  Y así con todas las etiquetas. Esta notación nueva es mucho
	  más sencilla de utilizar y de procesar, aunque es una total
	  lástima que deba tirar a la basura el procesador de etiquetas
	  HTML (aunque lo guardé por ahora en OLD-STYLE-htmlex.in).

2001-09-13  David A. Capello  <dacap@users.sourceforge.net>

	* Arreglado un error con <EXEC process ...>: Al igual que <INCLUDE>
	  lo hace con INCFILE, esta etiqueta necesitaba que OUTFILE sea
	  también `local'.
	* Se cambió el formato de las funciones: Ya no es más
	  <!function arg1="...">, ahora directamente se debe utilizar
	  <!function "..."> ya que las funciones solamente poseerán un
	  solo argumento.

2001-09-07  David A. Capello  <dacap@users.sourceforge.net>

	* Funciones: Ahora se debe utilizar <!function ...> en vez de
	  <*function ...>.

2001-09-06  David A. Capello  <dacap@users.sourceforge.net>

	* Nombre del programa: Siempre `htmlex', ya no más HTMLex.
	* Propiedades: Ahora se le llaman `atributos' de las `etiquetas'
	  (ya que me puse a leer unos viejos documentos HTML y utilizaban
	  `attribute' para referirse a las propiedades de una etiqueta)
	* Manual: Más información sobre etiquetas y algunas otras opciones.

2001-09-05  David A. Capello  <dacap@users.sourceforge.net>

	* Nuevo manual español: comenzada la versión del manual de htmlex
	  en español.
	* Ya está la generación de dependencies: mediante `-M', y como si
	  fuera poco, también arreglé el error (que estaba en la versión en C)
	  de que los ficheros podían aparecer varias veces si eran incluidos
	  repetidamente.
	* Optimizados los mensajes de error (verbose): ahora, por cada
	  línea de información, se muestra el nombre del fichero y el número
	  de línea de donde salió el comando (al estilo que genera el `gcc').
	* Se agregó un par de mensajes: indican que no se cerró
	  una determinada etiqueta o un determinado comentario.
	* Arreglado: un error en <*suffix ...> (por ejemplo, en "src-1.0/bar"
	  retornaba ".0/bar").
	* Nuevos ejemplos: dir.htex, notdir.htex, suffix.htex, basename.htex,
	  e include3.htex que engloba los cuatro anteriores.
	* Más funciones (al puro estilo Perl):
	    <*chop>, <*lc>, <*lcfirst>, <*uc>, <*ucfirst>, <*substr>
	* Se agregó la nueva notación para funciones <*función argN>:
	  Ya están listas <*dir arg1>, <*notdir arg1>, <*suffix arg1>
	  y <*basename arg1> (todas con el mismo funcionamiento que
	  en los Makefiles).
	* Nuevos ejemplos: args.htex e include2.htex.
	* Arreglado: un error del orden de los argumentos que se le pasaban
	  a los ficheros incluidos (por medio de <INCLUDE...>).
	* Eliminada la utilización de `exists': ahora ya no hay más
	  advertencias por medio de `perl -w'.

2001-09-04  David A. Capello  <dacap@users.sourceforge.net>

	* Nuevos ejemplos: include.htex, exec.htex, y clock.htex.
	* Arreglado un error de inclución múltiple (si un fichero incluye
	  a otro, y este último incluye a su vez a otro más): se tuvo que
	  hacer a la variable *INCFILE de ámbito local (local *INCFILE),
	  para evitar la superposición de sus valores en múltiples llamadas.
	* Ya funciona <include...> con argumentos:
	    <include src=head.htex arg1=es>
	* Arreglados varios errores con el manejo de los archivos
	  mediante `punteros' (ver que ahora se utiliza "*$filehandle"):
	  el principal era que no se detectaba el EOF y no se leían líneas
	  extras.
	* Arreglado un error al ejecutar e incluir archivos: Se debía
	  `fluir' (flush) el contenido del texto ya leido, ya que si no
	  aparecía primero el resultado de la operación y luego el resto
	  de la línea (aun cuando tenía texto detrás de la etiqueta):
	  Antes:
	    hola<include src=test>chau -> [contenido de `test']holachau
	  Ahora:
	    hola<include src=test>chau -> hola[contenido de `test']chau
	* Arreglado un pésimo error de lectura de archivos: Ahora a las
	  funciones se le debe pasar el $filehandle a utilizar para poder
	  leer datos.

2001-09-03  David A. Capello  <dacap@users.sourceforge.net>

	* <exec...>: Arreglado completamente, ya funciona.

2001-09-02  David A. Capello  <dacap@users.sourceforge.net>

	* Parcial funcionamiento: De <exec...>.
	* Arreglado un error con las propiedades entre comillas:
	  ahora sí funciona.
	* Se agregó "<include...>": Antes, en la versión htmlex en C/C++,
	  el formato era algo como "<include file=>", ahora será
	  "<include src=>" que es mucho más acorde a la notación
	  estandard HTML como "<img src=>" y "<frame src=>".
	* Mejorada: la obtención de propiedades en etiquetas htmlex.
	* Arreglado: un error con `-I=path'.
	* Documentación: El README español ya tiene bastante información
	  sobre las etiquetas.
	* Nueva opción `-c': Para preservar los comentarios (si es que
	  el usuario quiere sus comentarios en el fichero destino)
	* Comentarios HTML: Ya son totalmente soportados (y salteados).
	* `-h' a `-t' para mostrar la cabecera HTTP: Se hacía confuso
	  si el usuario quería (en realidad) pedir ayuda.

2001-09-01  David A. Capello  <dacap@users.sourceforge.net>

	* Agregado: --no-proc: ahora el proceso de las macros puede
	  darse de dos formas:
	    - si la macro tiene etiquetas y otras macros dentro, las mismas
	      serán reemplazadas cuando se encuentre el nombre de la macro
	      en el texto (al estilo C/C++);
	    - si la macro tiene etiquetas y otras macros dentro, las mismas
	      son reemplazadas en el acto (por defecto esta forma se
	      utilizará);
	* Macros: El valor de las macros (value=...) ya puede contener
	  valores de otras macros y hasta etiquetas (...value=<ARG1>...).
	* Comentarios: Algunos pocos de más.

2001-08-25  David A. Capello  <dacap@users.sourceforge.net>

	* Nuevos ejemplos: macro.htex, iso-8859-1.htex y copyright.htex.
	* Entrecomillado: Ya se soportan propiedades con los valores entre
	  comillas (como name="David Capello" y name='David Capello').
	* Lector de propiedades: Se eliminó a utilización de las expresiones
	  regulares para este propósito, así que ahora los valores pueden
	  contener cualquier caracter.
	* Reemplazador de macros: Se agregó `%htmlex_macro' y ya funciona
	  a la perfección el detector de macros en el texto, hasta ya está
	  solucionado el problema de las macros que comienzan con el mismo
	  texto y tienen diferente longitud (ya que las macros son procesadas
	  desde la que tiene el nombre más largo hasta la que tiene el más
	  corto).
	* Multi-línea: El lector de etiquetas ya acepta a que las
	  propiedades se encuentren en líneas diferentes ("<TAG\nprop=value>").

2001-08-24  David A. Capello  <dacap@users.sourceforge.net>

	* Propiedades de las macros: se arregló algunos pequeño errores
	  (cuando aparecian muchos espacios entre valor y valor).
	* Limpiado: un poco código y se agregaron más comentarios.
	* Arreglado: ahora sí ya se intenta abrir el fichero de entrada
	  de todas las ubicaciones indicadas (mediante -I=path).

2001-08-23  David A. Capello  <dacap@users.sourceforge.net>

	* Limpiada: Al código en general.
	* Agregado: htmlex_getprop, obtiene las propiedades de una etiqueta.
	* Leector: Línea por línea ya se identifican entre las etiquetas
	  y el texto normal (htmlex_extag, procesa una etiqueta htmlex).
	* Ya se le pasan los argumentos al fichero: Utilizando
	  @htmlex_fileargs y las opciones "-- args..." o "FILE args..."
	* Listas las opciones:
	  --include
	  --http-header
	  --verbose
	  --very-verbose
	  --version
	  --help
	* Argumentos: "-I[=path| path]" y "--include[=path| path]" ya
	  funcionan.

2001-08-22  David A. Capello  <dacap@users.sourceforge.net>

	* --include: parcialmente soportado, faltaría -I y la opción `='

2001-08-21  David A. Capello  <dacap@users.sourceforge.net>

	* Línea de comandos: soporta --help, --version, --verbose y -v.
	* htmlex: versión inicial en Perl.

2001-08-16  David A. Capello  <dacap@users.sourceforge.net>

	* Entre ayer y hoy: estuve investigando la posibilidad de hacer
	  el programa completamente en un script Perl. Por ahora se
	  creó un nuevo directorio `perl/'.

2001-08-15  David A. Capello  <dacap@users.sourceforge.net>

	* Agregado <exec file argN...>: para ejecutar comandos externos.

2001-08-11  David A. Capello  <dacap@users.sourceforge.net>

	* Se eliminó: la posibilidad del fichero ejecutable en la
	  primer línea (ya no más "#!").

2001-07-30  David A. Capello  <dacap@users.sourceforge.net>

	* Arreglado: un error con los <if>, ahora sí funcionan :-)
	* Nuevo ejemplo: expr.htex.
	* Ya se soportan: <if> anidados.

2001-07-29  David A. Capello  <dacap@users.sourceforge.net>

	* Dos primeros ejemplos (en examples/): `args.htex' y `if.htex'.
	* Hoy mismo: se eliminó los dos modificadores `+' y `-' y se
	  optimizó el procesamiento de las etiquetas. Por ejemplo ahora
	  solamente en algunas propiedades de determinadas etiquetas
	  se toman como expresiones y se reemplazan macros.
	* Se agregó: el nuevo modificador `+' en los nombres de propiedades
	  (para interpretar valores como expresiones).
	* Se optimizó: el proceso de etiquetas.

2001-07-28  David A. Capello  <dacap@users.sourceforge.net>

	* Agregado: `expr.c' y las etiquetas: <if>, <elif>, <else> e </if>.
	* Mejorado: El aspecto de los documentos (layouts).

2001-07-27  David A. Capello  <dacap@users.sourceforge.net>

	* Entre hoy y ayer: eliminado por completo los BUFFERs, ahora
	  todas las operaciones se hacen mediante STREAMs.
	* Nuevo `memory.[ch]': para manejar la memoria, además utilizo
	  un contador de llamadas a `alloc' y `free' para saber si hay
	  algo que no se libera al finalizar el programa (con esto pude
	  detectar un pequeño error en la función `create_stream').

2001-07-26  David A. Capello  <dacap@users.sourceforge.net>

	* Agregado `macro_allowed': ahora, en cada propiedad de una etiqueta
	  se puede especificar si se quiere o no procesar macros en su valor.
	* Corregido `process_char': antes, si una etiqueta HTML normal
	  tenía dentro una etiqueta HTMLex esta última no era procesada
	  (con esto también se eliminó el argumento `tags_allowed' de
	  la función en cuestión).

2001-07-25  David A. Capello  <dacap@users.sourceforge.net>

	* Agregado el soporte para generar dependencias.
	* Se arregló un error que ocurría al llegar el final del fichero:
	  la última línea no se imprimía.
	* Soporte para utilizar macros y etiquetas: En los valores de
	  las propiedades.

2001-07-24  David A. Capello  <dacap@users.sourceforge.net>

	* Nuevo stream.c: ahora con los STREAM puedo manejar un fichero
	  o un bloque de memoria de la misma forma (putc, getc, puts, gets,
	  seek, tell, eof). Esto podría llegar a significar el final para
	  los BUFFERs?

2001-07-20  David A. Capello  <dacap@users.sourceforge.net>

	* Agregado --compress: para "comprimir" un poco la distribución
	  de los caracteres `\n' (no permite dos seguidos).
	* Arreglada la detección de comentarios HTML: ahora se saltea
	  completamente todo el comentario (antes se iva todo al demonio).
	* Nueva documentación (doc/): license.es.htex y bnf.es.htex son los
	  dos más importantes (luego index*.htex).
	* Más comentarios modificados.
	* Se arregló `process_char': en la *detección* de etiquetas y el
	  salto de los valores de las propiedades entre comillas ="...",
	  ya se agregó la posibilidad de seguir lleyendo líneas hasta
	  encontrar el *REAL* cierre de la comilla.

2001-07-19  David A. Capello  <dacap@users.sourceforge.net>

	* Modifiqué varios comentarios que quedaron viejos: hasta
	  comentarios que hice ESTE MISMO día.
	* Se separaron más funciones de htmlex.c: en este caso, las funciones
	  para etiquetas TAG y TAG_PROP pasaron al archivo tag.[ch].
	* Definitivamente arreglado: todos los errores de recursividad,
	  agregado buffer.c y optimizadas varias partes de código ilegibles.
	* Se agregó la lectura de líneas múltiples: ahora ya se pueden
	  crear macros que no necesariamente comiencen y terminen en la misma
	  línea.
	* Nueva lectura de cualquier línea: ahora ya se soportan líneas de un
	  tamaño mayor a 256 caracteres, en realidad y teóricamente, se puede
	  leer *CUALQUIER* línea.
	* Nuevo FAQ.es: por ahora un par de preguntas y respuesta, luego
	  lo reviso.

2001-07-18  David A. Capello  <dacap@users.sourceforge.net>

	* Separé un poco el trabajo de `htmlex.c' en: `macro.[ch]',
	  `stringex.[ch]' y `types.h',
	* Nueva posibilidad de imprimir la cabecera HTTP: Algún día se
	  llegará a la altura de PHP?
	* Arreglado y optimizado el manejo de las MACROS: mejores y más
	  funciones para las mismas.
	* Se agregó un archivo: bnf.txt con la explicación BNF de HTMLex.
	* Corregidos algunos errores: con las macros y la detección de
	  propiedades en las etiquetas.
	* Arreglé un grave error en: get_macro().
	* Se eliminó el error de recursividad infinita con las macros
	  (simple, doble y múltiple): por medio de la variable `used' en
	  cada una.
	* Los nombres de las macros ya son reemplazados por sus
	  correspondientes valores: En el proceso línea por línea principal,
	  todavía me falta en los argumentos de las etiquetas.

2001-07-17  David A. Capello  <dacap@users.sourceforge.net>

	* Etiquetas: <macro [name [value]|reset]> y <include>
	* También ya se soportan las etiquetas: <argc> y <argv*>
	* El programa ya lee ficheros: Hasta puede incluir otros, acepta
	  los parámetros -I y -v. Por ahora trabaja línea por línea.
	* Versión inicial: htmlex 0.1

