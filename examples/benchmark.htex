<!macro-reset>

<!macro $MENSAJE "'Presione cualquier tecla para continuar...'">

<!exec clear>

Bienvenido a la prueba de evaluación de prestaciones de htmlex.
---------------------------------------------------------------

Este programa está desarrollado especialmente para un sistema UNIX y
compatibles. Por lo que si lo está ejecutando desde otras plataformas
(como DOS), ocurrirán muchos errores a causa de la falta de las mayoría
de programas que utiliza esta prueba.

Además, si quiere ver correctamente los acentos y caracteres especiales,
necesitará de una terminal con soporte para ISO-8859-1.

Nota: Este programa debe ser ejecutado desde el directorio de los
ejemplos de htmlex.

<!exec read -p $MENSAJE -n 1>

<!-- Probar comandos externos -->

El siguiente texto viene del comando `echo':
<!exec echo Hola mundo!>

El siguiente texto viene del comando `date':
<!exec date>

<!exec read -p $MENSAJE -n 1>

<!-- Probar los bloques de condiciones -->

Obteniendo dos números al azar...
<!macro $NUMERO1 <!exec echo -n $(($RANDOM%4))>>
<!macro $NUMERO2 <!exec echo -n $(($RANDOM%2))>>
Listo:
  1er número: $NUMERO1 (cifra de 0 a 3)
  2do número: $NUMERO2 (cifra de 0 a 1)

<!macro $2DORES "el 2do es <!if $NUMERO2 == 0>cero<!else>uno<!fi>">

<!if $NUMERO1 == 0>
  El 1er número es cero y $2DORES.
<!elif $NUMERO1 == 1>
  El 1er número es uno y $2DORES.
<!elif $NUMERO1 == 2>
  El 1er número es dos y $2DORES.
<!else>
  El 1er número es tres y $2DORES.
<!fi>

<!exec read -p $MENSAJE -n 1>

<!-- Probar incluir un fichero -->

<!macro $TEMP_FILENAME include3.htex>
<!macro $BASENAME <!basename $TEMP_FILENAME>>
<!macro $SUFFIX <!suffix $TEMP_FILENAME>>
<!macro $FILENAME $BASENAME$SUFFIX>

$TEMP_FILENAME
$BASENAME
$SUFFIX
$FILENAME
Contenido del fichero `$FILENAME':
<!include $FILENAME>

<!exec read -p $MENSAJE -n 1>

<!-- Probar condiciones anidadas -->

Cuatro números:
<!macro $VAR1 <!exec echo -n $(($RANDOM%4))>>$VAR1 (0-3)
<!macro $VAR2 <!exec echo -n $(($RANDOM%4))>>$VAR2 (0-3)
<!macro $VAR3 <!exec echo -n $(($RANDOM%2))>>$VAR3 (0-1)
<!macro $VAR4 <!exec echo -n $(($RANDOM%2))>>$VAR4 (0-1)

<!if $VAR1 == 0>
  <!if $VAR2 == 0>
    cero - cero
  <!elif $VAR2 == 1>
    cero - uno
  <!elif $VAR2 == 2>
    cero - dos
  <!elif $VAR2 == 3>
    cero - tres
  <!fi>
<!elif $VAR1 == 1>
  <!if $VAR2 == 0>
    uno - cero
  <!elif $VAR2 == 1>
    uno - uno
  <!elif $VAR2 == 2>
    uno - dos
  <!elif $VAR2 == 3>
    uno - tres
  <!fi>
<!elif $VAR1 == 2>
  <!if $VAR2 == 0>
    dos - cero
  <!elif $VAR2 == 1>
    dos - uno
  <!elif $VAR2 == 2>
    dos - dos
  <!elif $VAR2 == 3>
    dos - tres
  <!fi>
<!elif $VAR1 == 3>
  <!if $VAR2 == 0>
    tres - cero
  <!elif $VAR2 == 1>
    tres - uno
  <!elif $VAR2 == 2>
    tres - dos
  <!elif $VAR2 == 3>
    tres - tres
  <!fi>
<!fi>

<!if $VAR3 == 0>
    cero - <!if $VAR4 == 0>cero<!else>uno<!fi>
<!else>
    uno - <!if $VAR4 == 0>cero<!else>uno<!fi>
<!fi>

<!exec read -p $MENSAJE -n 1>

<!-- Final -->

Si llegó hasta aquí sin errores, significa que su versión de htmlex está
funcionando a la perfección, o por lo menos, que sirve para hacer la
mayoría de funciones básicas de htmlex.

Gracias por usar htmlex. Para actualizaciones y novedades, visite:

http://htmlex.sourceforge.net

